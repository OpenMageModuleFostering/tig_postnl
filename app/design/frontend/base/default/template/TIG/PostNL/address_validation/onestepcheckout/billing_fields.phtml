<?php
/**
 *                  ___________       __            __
 *                  \__    ___/____ _/  |_ _____   |  |
 *                    |    |  /  _ \\   __\\__  \  |  |
 *                    |    | |  |_| ||  |   / __ \_|  |__
 *                    |____|  \____/ |__|  (____  /|____/
 *                                              \/
 *          ___          __                                   __
 *         |   |  ____ _/  |_   ____ _______   ____    ____ _/  |_
 *         |   | /    \\   __\_/ __ \\_  __ \ /    \ _/ __ \\   __\
 *         |   ||   |  \|  |  \  ___/ |  | \/|   |  \\  ___/ |  |
 *         |___||___|  /|__|   \_____>|__|   |___|  / \_____>|__|
 *                  \/                           \/
 *                  ________
 *                 /  _____/_______   ____   __ __ ______
 *                /   \  ___\_  __ \ /  _ \ |  |  \\____ \
 *                \    \_\  \|  | \/|  |_| ||  |  /|  |_| |
 *                 \______  /|__|    \____/ |____/ |   __/
 *                        \/                       |__|
 * OneStepCheckout
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Creative Commons License.
 * It is available through the world-wide-web at this URL:
 * http://creativecommons.org/licenses/by-nc-nd/3.0/nl/deed.en_US
 * If you are unable to obtain it through the world-wide-web, please send an email
 * to servicedesk@tig.nl so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade this module to newer
 * versions in the future. If you wish to customize this module for your
 * needs please contact servicedesk@tig.nl for more information.
 *
 * @copyright   Copyright (c) 2017 Total Internet Group B.V. (http://www.tig.nl)
 * @license     http://creativecommons.org/licenses/by-nc-nd/3.0/nl/deed.en_US
 */
?>
<?php
$billingFields = array();
$extraBillingFields = array();
$formErrors = $this->getParentBlock()->formErrors;
$formErrors = (!empty($formErrors['billing_errors'])) ? $formErrors['billing_errors'] : array();

$helper = Mage::helper('onestepcheckout/checkout');
$dataHelper = Mage::helper('onestepcheckout');

    $billingFields['firstname'] = '
        <div class="osc-short input-box input-firstname'.((in_array('firstname', $formErrors)) ? ' input-error' : '').'">
            <label for="billing:firstname">'.$this->__('First Name').' <span class="required">*</span></label><br />
            <input class="required-entry input-text" type="text" name="billing[firstname]" id="billing:firstname" value="'.$dataHelper->clearDash($this->getQuote()->getBillingAddress()->getFirstname()).'" />
        </div>';
    $billingFields['lastname'] = '
        <div class="osc-short input-box input-lastname'.((in_array('lastname', $formErrors)) ? ' input-error' : '').'">
            <label for="billing:lastname">'.$this->__('Last Name').' <span class="required">*</span></label><br />
            <input class="required-entry input-text" type="text" name="billing[lastname]" id="billing:lastname" value="'.$dataHelper->clearDash($this->getQuote()->getBillingAddress()->getLastname()).'" />
        </div>';
    ?>
<?php if(!$this->isCustomerLoggedIn() || in_array('email_registered', $formErrors)): ?>
    <?php $billingFields['email'] = '
        <div class="clearfix" id="onestepcheckout-email-error" '.((!in_array('email_registered', $formErrors)) ? 'style="display: none"' : '').'>
            <div id="onestepcheckout-email-error-message" class="onestepcheckout-error">'.
                ((in_array('email_registered', $formErrors)) ? $this->__('Email address already registered. Please <a href="#" onclick="login_popup.show(); return false;">login now</a> or use a different email address.') : $this->__('Invalid email address.'))
            .'</div>
        </div>';
    ?>
<?php endif; ?>
<?php if(!$this->isCustomerLoggedIn()): ?>
    <?php $billingFields['email'] = $billingFields['email'].'
        <div class="osc-short input-box input-email'.((in_array('email', $formErrors)) ? ' input-error' : '').'">
            <label for="billing:email">'.$this->__('Email Address').' <span class="required">*</span></label><br />
            <input type="email" name="billing[email]" id="billing:email" value="'.$dataHelper->clearDash($this->getQuote()->getBillingAddress()->getEmail()).'" title="'.$this->__('Email Address') .'" class="validate-email required-entry input-text" />
        </div>';
    ?>
<?php endif; ?>

<?php
// In some cases email might be 2 div-s inside one <li> and it messes up a good solution for css widths.
// Therefore here I make sure email creates just one div inside <li>
if (in_array('email', $billingFields) && $billingFields['email']) {
    $billingFields['email'] = '<div style="overflow: hidden">'.$billingFields['email'].'</div>';
}
?>


<?php if(!$this->settings['exclude_telephone']):?>
    <?php $billingFields['telephone'] = '
        <div class="osc-short input-box input-telephone'.((in_array('telephone', $formErrors)) ? ' input-error' : '').'">
            <label for="billing:telephone">'.$this->__('Telephone').' <span class="required">*</span></label><br/>
            <input type="tel" name="billing[telephone]" value="'.$dataHelper->clearDash($this->getQuote()->getBillingAddress()->getTelephone()).'" title="'.$this->__('Telephone').'" class="required-entry input-text" id="billing:telephone" />
        </div>';
    ?>
<?php endif; ?>

<?php if(!$this->settings['exclude_address']):?>
    <?php $billingFields['street'] = $this->getChild('postnl_billing_postcodecheck')
        ->setAddressType('billing')
        ->setAddress($this->getQuote()->getBillingAddress())
        ->setCountryHtmlSelect($this->getCountryHtmlSelect('billing'))
        ->toHtml();
    ?>
<?php endif; ?>

<?php
/**
 * TIG: Removed the postcode, city and country fields as they are already generated by the PostNL extension.
 */
?>
<?php /* if(!$this->settings['exclude_country_id']):?>
<?php
$billingFields['country_id'] = '
    <div class="input-box input-country'.((in_array('country', $formErrors)) ? ' input-error' : '').'">
        <label for="billing:country_id">'.$this->__('Country').' <span class="required">*</span></label><br />
            '.$this->getCountryHtmlSelect('billing').'
    </div>';
?>
<?php else: ?>
<?php $billingFields['country_id'] = '
    <input type="hidden" name="billing[country_id]" id="billing:country_id" value="'.$this->settings['default_country'].'" />';
?>
<?php endif; */ ?>
<?php if(!$this->settings['exclude_region']): ?>
    <?php $billingFields['region_id'] = '
        <div class="osc-short input-box input-region input-region_id'.((in_array('region', $formErrors)) ? ' input-error' : '').'">
            <label for="billing:region">'.$this->__('State/Province').' <span class="required">*</span></label><br/>
            <select id="billing:region_id" name="billing[region_id]" title="'.$this->__('State/Province').'" class="validate-select" style="display:none">
                <option value="">'.$this->__('Please select region, state or province').'</option>
            </select>
            <script type="text/javascript">
                $("billing:region_id").setAttribute("defaultValue",  "'.$dataHelper->clearDash($this->getQuote()->getBillingAddress()->getRegionId()).'");
            </script>
            <input type="text" id="billing:region" name="billing[region]" value="'.$dataHelper->clearDash($this->getQuote()->getBillingAddress()->getRegion()).'"  title="'.$this->__('State/Province').'" class="required-entry input-text" style="display:none" />
        </div>';
    ?>
<?php endif; ?>
<?php
/**
 * TIG: Removed the postcode, city and country fields as they are already generated by the PostNL extension.
 */
?>
<?php /* if(!$this->settings['exclude_city']):?>
    <?php $billingFields['city'] = '
        <div class="osc-short input-box input-city'.((in_array('city', $formErrors)) ? ' input-error' : '').'">
            <label for="billing:city">'.$this->__('City').' <span class="required">*</span></label><br/>
            <input type="text" name="billing[city]" value="'.$dataHelper->clearDash($this->getQuote()->getBillingAddress()->getCity()).'" title="'.$this->__('City').'" class="required-entry input-text" id="billing:city" />
        </div>';
    ?>
<?php endif; ?>

<?php if(!$this->settings['exclude_zip']): ?>
    <?php $billingFields['postcode'] = '
        <div class="osc-short input-box input-postcode'.((in_array('postcode', $formErrors)) ? ' input-error' : '').'" >
            <label for="billing:postcode">'.$this->__('Zip/Postal Code').' <span class="required">*</span></label><br />
            <input type="text" title="'.$this->__('Zip/Postal Code').'" name="billing[postcode]" id="billing:postcode" value="'.$dataHelper->clearDash($this->getQuote()->getBillingAddress()->getPostcode()).'" class="validate-zip-international required-entry input-text" />
        </div>';
    ?>
<?php endif; */ ?>

<?php if(!$this->settings['exclude_company']): ?>
    <?php $billingFields['company'] = '
        <div class="osc-short input-box input-company'.((in_array('company', $formErrors)) ? ' input-error' : '').'">
            <label for="billing:company">'.$this->__('Company').'</label><br/>
            <input type="text" name="billing[company]" value="'.$dataHelper->clearDash($this->getQuote()->getBillingAddress()->getCompany()).'" title="'.$this->__('Company').'" class="input-text" id="billing:company" />
        </div>';
    ?>
<?php endif; ?>

<?php if(!$this->settings['exclude_fax']): ?>
    <?php $billingFields['fax'] = '
        <div class="osc-short input-box input-fax'.((in_array('fax', $formErrors)) ? ' input-error' : '').'">
            <label for="billing:fax">'.$this->__('Fax').'</label><br/>
            <input type="text" name="billing[fax]" value="'.$dataHelper->clearDash($this->getQuote()->getBillingAddress()->getFax()).'" title="'.$this->__('Fax').'" class="input-text" id="billing:fax" />
        </div>';
    ?>
<?php endif; ?>

<?php
    $_taxvat = false;
    try {
        if(Mage::getStoreConfig('onestepcheckout/exclude_fields/enable_pillwaxeuvat_support')){
            $_taxvat = $this->getLayout()->createBlock('euvat/widget_taxvat');
        }
    } catch (Exception $e) {
    }

    if(!is_object($_taxvat)){
        $_taxvat = $this->getLayout()->createBlock('customer/widget_taxvat');
    }
?>
<?php if(is_object($_taxvat) && $_taxvat->isEnabled()  && !$this->isCustomerLoggedIn()): ?>
    <?php $billingFields['taxvat'] =
            $_taxvat->setTaxvat($this->getQuote()->getCustomerTaxvat())
                ->setFieldIdFormat('billing:%s')->setFieldNameFormat('billing[%s]')->toHtml();
    ?>
<?php endif; ?>
<?php if (method_exists(Mage::helper('customer/address'), 'isVatAttributeVisible') && Mage::helper('customer/address')->isVatAttributeVisible()) : ?>
    <?php $billingFields['taxvat'] = '
            <label for="billing:vat_id">'.$this->__('VAT Number').'</label>
            <div class="input-box input-vat">
                <input type="text" id="billing:vat_id" name="billing[vat_id]" value="'.$dataHelper->clearDash($this->getQuote()->getBillingAddress()->getVatId()).'" title="'.$this->__('VAT Number').'" class="input-text '.Mage::helper('customer/address')->getAttributeValidationClass('vat_id').'" />
            </div>';
    ?>
<?php endif; ?>
<?php
    try {
        $_dob = $this->getLayout()->createBlock('customer/widget_dob');

    } catch (Exception $e) {
        $_dob = false;
    }
?>
<?php
    try {
        $_gender = $this->getLayout()->createBlock('customer/widget_gender');
    } catch (Exception $e) {
        $_gender = false;
    }
?>

<?php if (is_object($_dob) && $_dob->isEnabled() && !$this->isCustomerLoggedIn()): ?>
    <?php $billingFields['dob'] = '
        <div class="field">
            '.$_dob->setDate($this->getQuote()->getCustomerDob())->setFieldIdFormat('billing:%s')->setFieldNameFormat('billing[%s]')->toHtml().'
        </div>';
    ?>
<?php endif; ?>
<?php if (is_object($_gender) && $_gender->isEnabled() && !$this->isCustomerLoggedIn()): ?>
    <?php $billingFields['gender'] = '
        <div class="field">
            '.$_gender->setGender($this->getQuote()->getCustomerGender())->setFieldIdFormat('billing:%s')->setFieldNameFormat('billing[%s]')->toHtml().'
        </div>';
    ?>
<?php endif ?>
<?php if(!$this->isCustomerLoggedIn() && $helper->showCreateAccount()): ?>
    <?php
    $getCreateAccount = $this->getRequest()->getPost('create_account', false);
    $billingFields['create_account'] = '
        <div>
        <div class="input-box">
            <input id="id_create_account" type="checkbox" name="create_account" value="1" '.((isset($getCreateAccount) && $getCreateAccount == '1') ? ' checked="checked"' : '').' />
            <label for="id_create_account">'.$this->__('Create an account for later use').'</label>
        </div>

        <script>
        document.observe("dom:loaded", function() {
            $("id_create_account").observe("click", function(e) {
                var element = e.element();
                if(element.checked) {
                    $("onestepcheckout-li-password").show();
                }
                else    {
                    $("onestepcheckout-li-password").hide();
                }
            });
        });
        </script>
        </div>
        ';
    ?>
<?php endif; ?>
<?php if($helper->showPasswords() && !$this->isCustomerLoggedIn()): ?>
    <?php
        $billing_data = $this->getRequest()->getPost('billing', array());
        //id="onestepcheckout-li-password"
        $billingFields['password'] = '
        <li id="onestepcheckout-li-password" '.(($helper->hidePasswords()) ? 'style="display: none;"':'').'>
            <div class="osc-short input-box input-password'.((in_array('password', $formErrors)) ? ' input-error' : '').'">
                <label for="billing:customer_password">'.$this->__('Password').'</label><br/>
                <input type="password" class="input-text required-entry validate-password" value="'.((isset($billing_data['customer_password'])) ? Mage::helper('core')->escapeHtml($billing_data['customer_password']) : '').'" title="Password" id="billing:customer_password" name="billing[customer_password]"/>
            </div>
            <div class="osc-short input-box input-password'.((in_array('confirm_password', $formErrors)) ? ' input-error' : '').'">
                <label for="billing:confirm_password">'.$this->__('Confirm password').'</label><br/>
                <input type="password" class="input-text required-entry validate-cpassword" value="'.((isset($billing_data['confirm_password'])) ? Mage::helper('core')->escapeHtml($billing_data['confirm_password']) : '').'" id="billing:confirm_password" title="Confirm Password" name="billing[confirm_password]"/>
            </div>
        </li>';
    ?>
<?php endif; ?>

<?php if ($this->isCustomerLoggedIn() && $this->customerHasAddresses()):?>
    <?php $billingFields['save_in_address_book'] = '
        <li class="control">
            <div class="input-box input-save-address">
                <input type="checkbox" name="billing[save_in_address_book]" value="1" title="'.$this->__('Save in address book').'" id="billing:save_in_address_book" onchange="shipping.setSameAsBilling(false);"'.(($dataHelper->clearDash($this->getQuote()->getBillingAddress()->getSaveInAddressBook())) ? 'checked="checked"':'').' class="checkbox" /><label for="billing:save_in_address_book">'.$this->__('Save in address book').'</label>
            </div>
        </li>';
    ?>
<?php else:?>
    <?php $billingFields['save_in_address_book'] = '
        <li class="no-display"><input type="hidden" name="billing[save_in_address_book]" value="1" /></li>';
    ?>
<?php endif; ?>

<?php

if ($this->helper('postnl/deliveryOptions')->quoteIsIDCheck()):
    $extraBillingFields[11] = array(
        'positionNr' => 11,
        'fieldKey' => 'postnl_idcheck',
        'inputElementHtml' => '<li class="control">' . $this->getChildHtml('postnl_billing_idcheck') . '</li>',
        'isNewlineAfter' => '0',
    );
endif;

$addressFields = $this->echoAddressFields($billingFields);

/**
 * 1. Go from top to bottom and move all items 1 position up (14 -> 15, 10 -> 11, etc)
 * 2. Place the new items in the array if at the right position.
 * 3. Sort the array by key.
 */
foreach ($extraBillingFields as $position => $field):
    $fieldAdded = false;
    for ($i = max(array_keys($addressFields)); $i <= 0; $i--):
        if (isset($addressFields[$i])):
            $addressFields[$i + 1] = $addressFields[$i];
            unset($addressFields[$i]);
        endif;

        if ($position == $i):
            $fieldAdded = true;
            $addressFields[$position] = $field;
            break;
        endif;
    endfor;

    if (!$fieldAdded):
        $addressFields[$position] = $field;
    endif;
endforeach;

ksort($addressFields);

// write out the sorted array, inserting <li> where there is Newline After
echo '<li class="clearfix">';

foreach ($addressFields as $inputElemArray ) {
    echo $inputElemArray ["inputElementHtml"];

    if ($inputElemArray ["isNewlineAfter"]) {
        echo '</li>';
        echo '<li class="clearfix">';
    }
} // foreach

echo '</li>';

?>
