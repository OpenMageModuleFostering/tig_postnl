<?php /**
 *                  ___________       __            __
 *                  \__    ___/____ _/  |_ _____   |  |
 *                    |    |  /  _ \\   __\\__  \  |  |
 *                    |    | |  |_| ||  |   / __ \_|  |__
 *                    |____|  \____/ |__|  (____  /|____/
 *                                              \/
 *          ___          __                                   __
 *         |   |  ____ _/  |_   ____ _______   ____    ____ _/  |_
 *         |   | /    \\   __\_/ __ \\_  __ \ /    \ _/ __ \\   __\
 *         |   ||   |  \|  |  \  ___/ |  | \/|   |  \\  ___/ |  |
 *         |___||___|  /|__|   \_____>|__|   |___|  / \_____>|__|
 *                  \/                           \/
 *                  ________
 *                 /  _____/_______   ____   __ __ ______
 *                /   \  ___\_  __ \ /  _ \ |  |  \\____ \
 *                \    \_\  \|  | \/|  |_| ||  |  /|  |_| |
 *                 \______  /|__|    \____/ |____/ |   __/
 *                        \/                       |__|
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Creative Commons License.
 * It is available through the world-wide-web at this URL:
 * http://creativecommons.org/licenses/by-nc-nd/3.0/nl/deed.en_US
 * If you are unable to obtain it through the world-wide-web, please send an email
 * to servicedesk@tig.nl so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade this module to newer
 * versions in the future. If you wish to customize this module for your
 * needs please contact servicedesk@tig.nl for more information.
 *
 * @copyright   Copyright (c) 2017 Total Internet Group B.V. (http://www.tig.nl)
 * @license     http://creativecommons.org/licenses/by-nc-nd/3.0/nl/deed.en_US
 */
?>
<?php
$formErrors = $this->getParentBlock()->formErrors;
$formErrors = (!empty($formErrors['shipping_errors'])) ? $formErrors['shipping_errors'] : array();

$helper = Mage::helper('onestepcheckout/checkout');
$dataHelper = Mage::helper('onestepcheckout');
    $shippingFields['firstname'] = '
        <div class="osc-short input-box input-firstname'.((in_array('firstname', $formErrors)) ? ' input-error' : '').'">
            <label for="shipping:firstname">'.$this->__('First Name').' <span class="required">*</span></label><br />
            <input class="required-entry input-text" type="text" name="shipping[firstname]" id="shipping:firstname" value="'.$dataHelper->clearDash($this->getQuote()->getShippingAddress()->getFirstname()).'" />
        </div>';
    $shippingFields['lastname'] = '
        <div class="osc-short input-box input-lastname'.((in_array('lastname', $formErrors)) ? ' input-error' : '').'">
            <label for="shipping:lastname">'.$this->__('Last Name').' <span class="required">*</span></label><br />
            <input class="required-entry input-text" type="text" name="shipping[lastname]" id="shipping:lastname" value="'.$dataHelper->clearDash($this->getQuote()->getShippingAddress()->getLastname()).'" />
        </div>';
    ?>

<?php if(!$this->settings['exclude_address']):?>
    <?php $shippingFields['street'] = $this->getChild('postnl_shipping_postcodecheck')
        ->setAddressType('shipping')
        ->setAddress($this->getQuote()->getBillingAddress())
        ->setCountryHtmlSelect($this->getCountryHtmlSelect('shipping'))
        ->toHtml();
    ?>
<?php endif; ?>

<?php
/**
 + * TIG: Removed the postcode, city and country fields as they are already generated by the PostNL extension.
 + */
?>
<?php /* if(!$this->settings['exclude_country_id']):?>
<?php
$shippingFields['country_id'] = '
    <div class="input-box input-country'.((in_array('country', $formErrors)) ? ' input-error' : '').'">
        <label for="shipping:country_id">'.$this->__('Country').' <span class="required">*</span></label><br />
            '.$this->getCountryHtmlSelect('shipping').'
    </div>';
?>
<?php else: ?>
<?php $shippingFields['country_id'] = '
    <input type="hidden" name="shipping[country_id]" id="shipping:country_id" value="'.$this->settings['default_country'].'" />';
?>
<?php endif; */ ?>
<?php if(!$this->settings['exclude_region'] ): ?>
    <?php $shippingFields['region_id'] = '
        <div class="osc-short input-box input-region input-region_id'.((in_array('region', $formErrors)) ? ' input-error' : '').'">
            <label for="shipping:region">'.$this->__('State/Province').' <span class="required">*</span></label><br/>
            <select id="shipping:region_id" name="shipping[region_id]" title="'.$this->__('State/Province').'" class="validate-select" style="display:none">
                <option value="">'.$this->__('Please select region, state or province').'</option>
            </select>
            <script type="text/javascript">
                $("shipping:region_id").setAttribute("defaultValue",  "'.$dataHelper->clearDash($this->getQuote()->getShippingAddress()->getRegionId()).'");
            </script>
            <input type="text" id="shipping:region" name="shipping[region]" value="'.$dataHelper->clearDash($this->getQuote()->getShippingAddress()->getRegion()).'"  title="'.$this->__('State/Province').'" class="required-entry input-text" style="display:none" />
        </div>';
    ?>
<?php endif; ?>
<?php
/**
 * TIG: Removed the postcode, city and country fields as they are already generated by the PostNL extension.
 */
?>
<?php /* if(!$this->settings['exclude_city']):?>
    <?php $shippingFields['city'] = '
        <div class="osc-short input-box input-city'.((in_array('city', $formErrors)) ? ' input-error' : '').'">
            <label for="shipping:city">'.$this->__('City').' <span class="required">*</span></label><br/>
            <input type="text" name="shipping[city]" value="'.$dataHelper->clearDash($this->getQuote()->getShippingAddress()->getCity()).'" title="'.$this->__('City').'" class="required-entry input-text" id="shipping:city" />
        </div>';
    ?>
<?php endif; ?>
<?php if(!$this->settings['exclude_zip']): ?>
    <?php $shippingFields['postcode'] = '
        <div class="osc-short input-box input-postcode'.((in_array('postcode', $formErrors)) ? ' input-error' : '').'" >
            <label for="shipping:postcode">'.$this->__('Zip/Postal Code').' <span class="required">*</span></label><br />
            <input type="text" title="'.$this->__('Zip/Postal Code').'" name="shipping[postcode]" id="shipping:postcode" value="'.$dataHelper->clearDash($this->getQuote()->getShippingAddress()->getPostcode()).'" class="validate-zip-international required-entry input-text" />
        </div>';
    ?>
<?php endif; */ ?>
<?php if(!$this->settings['exclude_telephone']):?>
    <?php $shippingFields['telephone'] = '
        <div class="osc-short input-box input-telephone'.((in_array('telephone', $formErrors)) ? ' input-error' : '').'">
            <label for="shipping:telephone">'.$this->__('Telephone').' <span class="required">*</span></label><br/>
            <input type="tel" name="shipping[telephone]" value="'.$dataHelper->clearDash($this->getQuote()->getShippingAddress()->getTelephone()).'" title="'.$this->__('Telephone').'" class="required-entry input-text" id="shipping:telephone" />
        </div>';
    ?>
<?php endif; ?>
<?php if(!$this->settings['exclude_company']): ?>
    <?php $shippingFields['company'] = '
        <div class="osc-short input-box input-company'.((in_array('company', $formErrors)) ? ' input-error' : '').'">
            <label for="shipping:company">'.$this->__('Company').'</label><br/>
            <input type="text" name="shipping[company]" value="'.$dataHelper->clearDash($this->getQuote()->getShippingAddress()->getCompany()).'" title="'.$this->__('Company').'" class="input-text" id="shipping:company" />
        </div>';
    ?>
<?php endif; ?>

<?php if(!$this->settings['exclude_fax']): ?>
    <?php $shippingFields['fax'] = '
        <div class="osc-short input-box input-fax'.((in_array('fax', $formErrors)) ? ' input-error' : '').'">
            <label for="shipping:fax">'.$this->__('Fax').'</label><br/>
            <input type="text" name="shipping[fax]" value="'.$dataHelper->clearDash($this->getQuote()->getShippingAddress()->getFax()).'" title="'.$this->__('Fax').'" class="input-text" id="shipping:fax" />
        </div>';
    ?>
<?php endif; ?>
<?php if (method_exists(Mage::helper('customer/address'), 'isVatAttributeVisible') && Mage::helper('customer/address')->isVatAttributeVisible()) : ?>
    <?php $shippingFields['taxvat'] = '
            <label for="billing:vat_id">'.$this->__('VAT Number').'</label>
            <div class="input-box input-vat">
                <input type="text" id="shipping:vat_id" name="shipping[vat_id]" value="'.$dataHelper->clearDash($this->getQuote()->getBillingAddress()->getVatId()).'" title="'.$this->__('VAT Number').'" class="input-text '.Mage::helper('customer/address')->getAttributeValidationClass('vat_id').'" />
            </div>';
    ?>
<?php endif; ?>

<?php if ($this->isCustomerLoggedIn() && $this->customerHasAddresses()):?>
    <?php $shippingFields['save_in_address_book'] = '
        <li class="control">
            <input type="checkbox" name="shipping[save_in_address_book]" value="1" title="'.$this->__('Save in address book').'" id="shipping:save_in_address_book" '.(($this->getQuote()->getShippingAddress()->getSaveInAddressBook()) ? 'checked="checked"':'').' class="checkbox" /><label for="shipping:save_in_address_book">'.$this->__('Save in address book').'</label>
        </li>';
    ?>
<?php else:?>
    <?php $shippingFields['save_in_address_book'] = '
        <li class="no-display"><input type="hidden" name="shipping[save_in_address_book]" value="1" /></li>';
    ?>
<?php endif; ?>

<?php

$addressFields = $this->echoAddressFields($shippingFields);

// write out the sorted array, inserting <li> where there is Newline After
echo '<li class="clearfix">';

foreach ($addressFields as $inputElemArray ) {
    echo $inputElemArray ["inputElementHtml"];

    if ($inputElemArray ["isNewlineAfter"]) {
        echo '</li>';
        echo '<li class="clearfix">';
    }
} // foreach

echo '</li>';
?>
